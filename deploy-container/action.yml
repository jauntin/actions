name: "Deploy Container"
description: "Builds a container and pushes it to the github container repository"
inputs:
  aws-access-key-id:
    description: "AWS access key ID - usually a secret"
    required: true
  aws-secret-access-key:
    description: "AWS secret"
    required: true
  aws-region:
    description: "AWS Region"
    default: "us-east-2"
    required: false
  aws-repository-name:
    description: "Repository name in AWS"
    required: true
  aws-repository-domain:
    description: "ECR repository domain"
    required: true
  github-username:
    description: "Github PAT username - usually a secret"
    required: true
  github-password:
    description: "Github PAT password - usually a secret"
    required: true
  github-repository-location:
    description: "e.g. jauntin/obi-phpfpm-app"
    required: true
  tag:
    description: "Image tag e.g. hash"
    required: true
  cluster:
    description: "Name of the cluster to deploy to"
    required: true
  helm-command:
    description: "Helm command to run for deployment"
    required: true
  
outputs: {}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
    - uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ inputs.github-username }}
        password: ${{ inputs.github-password }}
    - uses: aws-actions/amazon-ecr-login@v1
    - shell: sh
      run: |
        aws ecr describe-repositories --repository-names ${{ inputs.aws-repository-name }} --region ${{ inputs.aws-region }} || aws ecr create-repository --repository-name ${{ inputs.aws-repository-name }} --region ${{ inputs.aws-region }}
        docker pull "ghcr.io/${{ inputs.github-repository-location }}:${{ inputs.tag }}"
        docker tag "ghcr.io/${{ inputs.github-repository-location }}:${{ inputs.tag }}" "${{ inputs.aws-repository-domain }}/${{ inputs.aws-repository-name}}:${{ inputs.tag }}"
        docker push "${{ inputs.aws-repository-domain }}/${{ inputs.aws-repository-name}}:${{ inputs.tag}}"
    - shell: sh
      run: |
        aws eks --region ${{ inputs.aws-region }} update-kubeconfig --name ${{ inputs.cluster }}
        ${{ inputs.helm-command }}
